#!/bin/bash
OUTFILE=$1
shift

TMPSTDERR=`mktemp -t ewrap.stderr.XXXXXXXX` || exit 1
TMPSTDOUT=`mktemp -t ewrap.stdout.XXXXXXXX`
if [ $? -ne 0 ]; then
  rm -rf $TMPSTDERR
  exit 1
fi

# Save stdout and stderr
#exec 6>&1
exec 7>&2

# We save stdout to a file so we can echo it later, then move stderr over to stdout.
# Then we redirect that through our parsing script (currently represented by cat)
# Then we save a copy of that output to a file, and move it back to stderr so it outputs in realtime.
# s/warning: control reaches end of non-void function/error: control reaches end of non-void function/
#  | tee $TMPSTDERR 1>&7
$@ 2>&1 > $TMPSTDOUT | sed -f ewrap.sed | tee $TMPSTDERR 1>&7

# Output our stdout while we're thinking about it
cat $TMPSTDOUT

rm -rf $TMPSTDOUT

! grep -q "error:" $TMPSTDERR
TMPRET=$?

rm -rf $TMPSTDERR

if [ "$TMPRET" -ne 0 ]
then
  rm -rf $OUTFILE
fi

exit $TMPRET