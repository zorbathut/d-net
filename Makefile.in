
STDCXXFLAGS := @STDCXXFLAGS@ -DDPRINTF_MARKUP -Wall -Wno-sign-compare -Wno-uninitialized -g -O2
STDLDFLAGS := @STDLDFLAGS@ -g -O2

GAMESOURCES := main core game timer debug gfx collide gamemap util rng args interface metagame itemdb itemdb_adjust itemdb_parse parse dvec2 input level coord ai inputsnag os float cfcommon coord_boolean player metagame_config shop shop_demo shop_info game_ai game_effects color metagame_tween cfc game_tank game_util game_projectile socket httpd recorder generators audio itemdb_httpd test regex shop_layout perfbar adler32
GAMECXXFLAGS := @GAMECXXFLAGS@ $(STDCXXFLAGS) -DNOEXIT
GAMELDFLAGS := @GAMELDFLAGS@ $(STDLDFLAGS)

EDITORSOURCES := vecedit vecedit_main debug os util gfx float coord parse color dvec2 cfcommon input itemdb itemdb_adjust itemdb_parse args regex rng adler32
# rng is not really needed since it won't be linked in at all, but it's easier to just include it
EDITORCXXFLAGS := `@WX@ --cxxflags` $(STDCXXFLAGS)
EDITORLDFLAGS := `@WX@ --libs --gl-libs` -lopengl32 $(STDLDFLAGS)

FUNCTORSOURCES := functor_gen debug os util parse adler32
MERGERSOURCES := merger debug os util parse itemdb itemdb_adjust itemdb_parse args color dvec2 float coord cfcommon merger_weapon merger_bombardment merger_tanks merger_glory merger_util merger_upgrades merger_factions regex rng adler32
# rng is not really needed since it won't be linked in at all, but it's easier to just include it
ODS2CSVSOURCES := ods2csv debug os util parse adler32 minizip/unzip minizip/ioapi
CONSOLECXXFLAGS := $(STDCXXFLAGS) -O0
CONSOLELDFLAGS := $(STDLDFLAGS) -O0

MERGETYPES := $(shell ls data/base/*.dwh.unmerged | sed 's/data\/base\/\(.*\).dwh.unmerged/\1/')
MERGEDATA := $(patsubst %,data/base/%.dwh,$(MERGETYPES))

DATAFILES := $(shell find data | grep -v \.svn | grep -v shopcache.dwh | grep -v .unmerged) $(MERGEDATA)

PACKAGESUBDIR := sekret

CXX := g++
CC := gcc

justdnet: d-net

include $(patsubst %,build/%.g.d,$(GAMESOURCES))
include $(patsubst %,build/%.e.d,$(EDITORSOURCES))
include $(patsubst %,build/%.c.d,$(FUNCTORSOURCES))
include $(patsubst %,build/%.c.d,$(MERGERSOURCES))
include $(patsubst %,build/%.c.d,$(ODS2CSVSOURCES))

d-net: d-net.exe $(MERGEDATA)
d-net-dbg: d-net-dbg.exe $(MERGEDATA)
vecedit: vecedit.exe $(MERGEDATA)
	@
vecedit-dbg: vecedit-dbg.exe $(MERGEDATA)

d-net.exe: $(patsubst %,build/%.g.o,$(GAMESOURCES))
	nice $(CXX) -o $@ $(patsubst %,build/%.g.o,$(GAMESOURCES)) $(GAMELDFLAGS)

d-net-dbg.exe: $(patsubst %,build/%.g.d.o,$(GAMESOURCES))
	nice $(CXX) -o $@ $(patsubst %,build/%.g.d.o,$(GAMESOURCES)) $(GAMELDFLAGS)

vecedit.exe: $(patsubst %,build/%.e.o,$(EDITORSOURCES))
	nice $(CXX) -o $@ $(patsubst %,build/%.e.o,$(EDITORSOURCES)) $(EDITORLDFLAGS)
  
vecedit-dbg.exe: $(patsubst %,build/%.e.d.o,$(EDITORSOURCES))
	nice $(CXX) -o $@ $(patsubst %,build/%.e.d.o,$(EDITORSOURCES)) $(EDITORLDFLAGS)

all: d-net vecedit

#asm: $(GAMESOURCES:=.S) makefile

clean:
	rm -rf build/*.o *.exe build/*.d build/*.S data/shopcache.dwh $(patsubst %,data/base/%.dwh,$(MERGETYPES)) build/*.csv

STDRUN = --nofullscreen --debugitems --startingPhase=7 --debugControllers=2 --factionMode=3 --nullControllers=11 --writeTarget= --auto_newgame --nocullShopTree --httpd_port=616 --noshopcache --runTests --noaudio --perfbar --nofastForwardOnNoCache

run: d-net
	./d-net.exe $(STDRUN)
  
basicrun: d-net
	./d-net.exe --nofullscreen --writeTarget= --httpd_port=616

cacherun: d-net
	./d-net.exe $(STDRUN) --shopcache

threerun: d-net
	./d-net.exe $(STDRUN) --debugControllers=3
  
debugrun: d-net-dbg
	./d-net-dbg.exe $(STDRUN)

debugbasicrun: d-net-dbg
	./d-net-dbg.exe --nofullscreen --writeTarget= --httpd_port=616

ai: d-net
	./d-net.exe --nofullscreen --aiCount=16 --fastForwardTo=100000000 --factionMode=3 --noshopcache --perfbar

aisc: d-net data/shopcache.dwh
	./d-net.exe --nofullscreen --aiCount=16 --fastForwardTo=100000000 --factionMode=3 --perfbar

ailoop: d-net
	while nice ./d-net.exe --nofullscreen --aiCount=12 --fastForwardTo=100000000 --factionmode=3 --terminateAfter=3600 --startingPhase=0 --noshopcache ; do echo Cycle. ; done

AICSLFLAGS = --nofullscreen --fastForwardTo=100000000 --factionmode=3 --noshopcache --perfbar --randomizeFrameRender=60 --startingPhase=7

aichecksumloop: d-net
	while nice rm -f dumps/dump-*.dnd && nice ./d-net.exe $(AICSLFLAGS) --aiCount=4 --terminateAfter=3600 && nice ./d-net.exe $(AICSLFLAGS) --readtarget=`ls dumps/dump-*.dnd` ; do echo Cycle. ; done
  
veced: vecedit
	./vecedit.exe

define prepackage
rm -rf deploy
rm -f \\\\192.168.100.4\\zorba\\www\\d-net\\$(PACKAGESUBDIR)\\Dnet\ Latest\ Windows.zip
mkdir deploy
cp d-net.exe deploy
cp /usr/mingw/local/bin/SDL.dll /usr/mingw/local/bin/cygogg-0.dll /usr/mingw/local/bin/libvorbis-0.dll /usr/mingw/local/bin/libvorbisfile-3.dll deploy
cp -r data deploy
mkdir deploy/dumps
cp dumps/readme.txt deploy/dumps
rm -f deploy/data/coordfailure
rm -rf deploy/data/base/*.unmerged
endef

define strip
strip -s deploy/*.exe deploy/*.dll
endef

define clean
cd deploy ; rm -rf `find | grep \.svn`
cd deploy ; find | grep \.wav | xargs oggenc -q 6
cd deploy ; rm -rf `find | grep \.wav`
endef

define postpackage
$(clean)
cd deploy ; zip -9 -r \\\\192.168.100.4\\zorba\\www\\d-net\\$(PACKAGESUBDIR)\\Dnet\ Latest\ Windows.zip *  # This is really too many backslashes.
cp \\\\192.168.100.4\\zorba\\www\\d-net\\$(PACKAGESUBDIR)\\Dnet\ Latest\ Windows.zip `date +\\\\\\\\192.168.100.4\\\\zorba\\\\www\\\\d-net\\\\$(PACKAGESUBDIR)\\\\dnet%G%m%d%H%M%S.zip` # This is really too many backslashes.
rm -rf deploy
endef

package: d-net data/shopcache.dwh
	$(prepackage)
	$(strip)
	$(postpackage)
  
shortpackage: d-net
	rm -f data/shopcache.dwh
	$(prepackage)
	$(strip)
	$(postpackage)

packageed: d-net vecedit data/shopcache.dwh
	$(prepackage)
	cp vecedit.exe deploy
	cp /usr/mingw/local/lib/wxbase28_gcc_custom.dll deploy
	cp /usr/mingw/local/lib/wxmsw28_core_gcc_custom.dll deploy
	cp /usr/mingw/local/lib/wxmsw28_gl_gcc_custom.dll deploy
	cp /usr/bin/mingwm10.dll deploy
	cp -r vecedit deploy
	$(strip)
	$(postpackage)
	cp \\\\192.168.100.4\\zorba\\www\\d-net\\$(PACKAGESUBDIR)\\Dnet\ Latest\ Windows.zip \\\\192.168.100.4\\zorba\\www\\d-net\\$(PACKAGESUBDIR)\\Dnet\ Latest\ Editor.zip

localpackage: d-net
	$(prepackage)
	$(strip)
	$(clean)

build/%.g.o: %.cpp
	nice $(CXX) $(GAMECXXFLAGS) -c -o $@ $<
  
build/%.g.d.o: %.cpp
	nice $(CXX) $(GAMECXXFLAGS) -c -o $@ $<

build/%.g.S: %.cpp
	nice $(CXX) $(GAMECXXFLAGS) -c -Wa,-a,-ad $< > $@

build/%.g.d: %.cpp
	nice bash -ec '$(CXX) $(GAMECXXFLAGS) -MM $< | sed "s!$*.o!build/$*.g.o build/$*.g.d.o $@!g" > $@'

build/%.e.o: %.cpp
	nice $(CXX) $(EDITORCXXFLAGS) -c -o $@ $<
  
build/%.e.d.o: %.cpp
	nice $(CXX) $(EDITORCXXFLAGS) -c -o $@ $<

build/%.e.S: %.cpp
	nice $(CXX) $(EDITORCXXFLAGS) -c -Wa,-a,-ad $< > $@

build/%.e.d: %.cpp functor.h  # some of these files use functor, so we make sure functor.h is built first
	nice bash -ec '$(CXX) $(EDITORCXXFLAGS) -MM $< | sed "s!$*.o!build/$*.e.o build/$*.e.d.o $@!g" > $@'

build/%.c.o: %.cpp
	nice $(CXX) $(CONSOLECXXFLAGS) -c -o $@ $<

# Any C files aren't ours, so we disable warnings
build/%.c.o: %.c
	nice $(CC) $(CONSOLECXXFLAGS) -w -c -o $@ $<

build/%.c.S: %.cpp
	nice $(CXX) $(CONSOLECXXFLAGS) -c -Wa,-a,-ad $< > $@

build/%.c.d: %.cpp
	nice bash -ec '$(CXX) $(CONSOLECXXFLAGS) -MM $< | sed "s!$*.o!build/$*.c.o build/$*.c.d.o $@!g" > $@'

build/%.c.d: %.c
	nice bash -ec '$(CXX) $(CONSOLECXXFLAGS) -MM $< | sed "s!$*.o!build/$*.c.o build/$*.c.d.o $@!g" > $@'

data/shopcache.dwh: d-net $(DATAFILES)
	./d-net.exe --generateCachedShops=0.99 || ( rm -f $@ && false )

export: d-net tools/generateWeaponGraph.py
	./d-net.exe --generateWeaponStats || ( rm -f $@ && false )
	/cygdrive/c/Python25/python.exe tools/generateWeaponGraph.py # this is not ideal

functor_gen.exe: $(patsubst %,build/%.c.o,$(FUNCTORSOURCES))
	nice $(CXX) -o $@ $(patsubst %,build/%.c.o,$(FUNCTORSOURCES)) $(CONSOLELDFLAGS)

functor.h: functor_gen.exe functor.h.in
	./functor_gen.exe || ( rm -f $@ && false )
  
merger.exe: $(patsubst %,build/%.c.o,$(MERGERSOURCES))
	nice $(CXX) -o $@ $(patsubst %,build/%.c.o,$(MERGERSOURCES)) $(CONSOLELDFLAGS)

ods2csv.exe: $(patsubst %,build/%.c.o,$(ODS2CSVSOURCES))
	nice $(CXX) -o $@ $(patsubst %,build/%.c.o,$(ODS2CSVSOURCES)) $(CONSOLELDFLAGS) -lxerces-c -lz

$(patsubst %,build/notes_%.csv,$(MERGETYPES)): notes.ods ods2csv.exe
	./ods2csv.exe $@ notes.ods $(patsubst build/notes_%.csv,%,$@) || ( rm -f $@ && false )

data/base/tank.dwh: data/base/weapon_sparker.dwh

data/base/%.dwh: data/base/%.dwh.unmerged build/notes_%.csv merger.exe
	./merger.exe build/notes_$*.csv data/base/$*.dwh.unmerged data/base/$*.dwh || ( rm -f $@ && false )
