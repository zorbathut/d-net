---- Major work path
- "Finish the Damn Game" Initiative
  - Write OO exporter
  - Bugfixes from games
    - Use "sell" to sell old weapons that no longer exist in the shop
      - Yep, rip out everything. Wheee
      - Clean up the old sell code
      - Get rid of old weapons as they become obsolete
      - Can you accidentally buy an upgrade or tank or etc despite being in sell mode?
    - Add more spawns to ming levels
    - Change "damage" to "weapon"
    - Add commas to large numbers in shop info
    - Add tank upgrade multipliers to the balance sheet
    - Add level editor options for subtraction, fix spiney and re-add
    - Pacman scale up 20% or so
    - Add upgrades to the balance sheet
    - Make upgrades a bit cheaper, maybe
    - 80% starting cash for new players, to discourage quitting and restarting
    - Add explosive radius in tank weapon upgrade
    - Make explosive radius bonus not apply to certain weapons
    - Boost blast radius on drones
    - Rework how inertia works
    - Add tank slide code w.r.t inertia
    - Link handling to engine a little
    - Better implant interface
    - Firing HE Missile everywhere leads to slowdowns :(
    - Increase autocannon eating through walls
    - Add wander-around-randomly-and-do-shit to the AI
    - Remove bombardment level visualization, and de-integer it
    - Add calculation for missile explosion durability
    - Glory durability?
    - Add sparker to balance sheet >:(
    - Add tank cost to balance sheet
  - Many many more weapons
    - Add implementations for all trap weapons
    - Add implementations for all exotic weapons
    - Re-enable weapon checks
    - Add trap behavior
    - Add exotic behavior
    - Special autocannon
    - Special laser
    - Special missile
    - OGRE
    - Spruce up base autocannon weaponry
    - Spruce up special autocannon weaponry
    - Spruce up base laser weaponry
      - lasers spawn sparklies
    - Spruce up special laser weaponry
    - Spruce up base missile weaponry
    - Spruce up special missile weaponry
    - Spruce up glory devices
    - Spruce up trap weaponry
    - Spruce up exotic weaponry
    - Spruce up OGRE

- "Polish the Damn Interface" Initiative
  - Four-weapon system
    - Make sure stuff works in sell mode
    - Highlight first weapon
    - Figure out how to equip stuff well?
  - Figure out slowdowns
  - Colorcode tanks, based on relative tank level
  - vecedit should drag around with the right mouse button or whatever
  - walls that are more easily destroyed
  - autocannons cause more wall damage
  - support for really thin walls
  - More permissive levels, more powerful editor catchall
    - Figure out how and when I can do genus-n levels, and allow that in one way or another (possibly chopping holey things in half?)
    - Allow subtractives
    - Try rebuilding the intersection system again? :/
    - Allow rings of some kind?
  - Add warning for single-node paths

- Run header culler again :D
- Netplay
- Add accuracy implant/upgrade?
- Less incentive to camp?
  - Reduce win/kill bonus as game goes on
- New game modes
  - Arcade mode
  - Alliance mode? Faction mode?
  - CTF
  - King of the Hill
  - Mutant
  - Onslaught
  - Bombing Run

---- After I figure out where it's going
- Need to sit down and rewrite the shop interface again.
  - Restricted speed/turn for the better tanks
    - Roll speed and handling together? Otherwise, come up with a description for the implant
    - "fast turn" "slow turn" modifier buttons?
  - Pop up "sell obsolete item" on buying bombardment/glory/new tank
  - Category descriptions somehow?

---- Sound-related stuff
- Need sound for game start sliders
- Need choose.wav and cursorover.wav
- accept.wav seems to start too late
- Eventually get things like weaponry sounds in

---- Things that take thought and musing
- Change things to "buy per 10sec" essentially?
- Tank treads :D
- Add better bombardment ticker
- Item despawning based on wimpiest player
  - How does selling work?
- FloatRange
  - This just takes some work - do this once I'm dealing with a lot of ranges again
- Make bombardment cheaper for 3 and 4 players
  - This is tough because of weird situations involving people buying/selling equipment before everyone's joined, after people leave, etc
- GameAccessors class
- Tweekvalues?
- Normalize controller to circle?
- Game inheritance/abstraction?
- Make DPS a little less flickery
- Improve win ticker so it displays overall totals somewhere maybe
- Demo screen for upgrades
- Physics for both pushing and tank-stuck-on-walls
- "Kill graph"

---- Maintenance, minor bugfix, braindead
- Make small text thicker
- Set your keys/buttons changing
- AI shouldn't try to buy the items it already owns/smarter about shops
- Buy menu flicker? Double-buffering?
- Extricate coord.h and float.h from more headers
- De-inline stuff in coord.h and float.h
- Winner list better special effects
- Winner list better "null" icon

---- Things that may or may not be needed
- Someday I should implement protocol buffers
- Next-gen vecedit?
  - Multiple thing select
  - Select all
  - Move
  - Copy/paste
  - Show level/icon, clean with no controls or whatever
- Conditionals to makefiles so that the dependencies are only included if they're needed
- Multithread cache generation
- Add random faction
- Stop reloading files in findLevels
- Special unique bonuses (turned the most, closest to death, most/least accurate, traveler, tunneler, deadeye, kamikaze, suicidal, triggerhappy, gunshy, bomber, perfect round, shutout, perfect shutout)

---- Major but unimportant ATM
- Sound, yo
- Absolute mode config
- Holy crap! Self-intersecting! Cry!
- Consistent-ize line width effects, colors, rendering in general
- Snapshots - how should this work? I'm still not sure.
  - Netplay (NOTE: shop demos change random state!)
  - dnd compression

http://www.itchstudios.com/psg/ - Dafred's artist

---
Sounditude

Take a "queueSound" with Sound, volume, fade.
Sound gets loaded, much like dvec2.
Then there's IDBSoundPack items. This sounds good.

---
String table stuff

Strtab("Hello")

Should somehow init a *global* parameter, and load things at the beginning of the program. Given a global init somehow I can do this.

This is not going to happen. We can, however, parse the source with an external program, then assemble that into a string-table file which is built into the program. It's a bit hacky but it will work.

---
xofs is the current window x offset.

We read in the current depth and branchines. From this we can calculate the intended depth of the left side. From this, we can calculate what the x offset of that left side *should* be. We approach this. As we approach this, the position of the x left side approaches whatever it should be, and other things approach as necessary.

So, if we assume left is 40% and right is 60%, that means if intended-left-side is 2, left-side will be 0.8 units. If we're at 0.7 units, depth 0 and 1 will be 0.4, depth 2 will be 0.45, and depth 3 will be 0.6.
