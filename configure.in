AC_INIT(main.cpp)

AC_CONFIG_AUX_DIR([build-aux])

AC_PROG_CC
AC_PROG_CXX
AC_LANG_CPLUSPLUS

AC_CHECK_PROG(SDL, sdl-config, sdl-config)
if test "x$SDL" == "x" ; then
    AC_MSG_ERROR([D-Net requires SDL.])
fi

AC_CANONICAL_TARGET
case "${target_os}" in
  cygwin)
    AC_MSG_NOTICE([adding extended boost and ogg directories for cygwin])
    # SDL fucks things up, but we need -mno-cygwin for other tests
    CPPFLAGS="$CPPFLAGS -I/usr/include/boost-1_33_1 -I/usr/ogg/include -mno-cygwin"
    LDFLAGS="$LDFLAGS -L/usr/ogg/lib -mno-cygwin"
    AC_CHECK_HEADER([windows.h],,AC_MSG_ERROR([Can't find windows.h]))
    
    # Horrible hack here - we can't search for a function in ws2_32 because their name mangling is different. So instead we just make sure the library exists. Not ideal.
    AC_CHECK_LIB([ws2_32], [main],,AC_MSG_ERROR([winsock is needed under cygwin]))
    LDFLAGS="$LDFLAGS -lws2_32"
    
    # Same deal here too
    AC_CHECK_LIB([opengl32], [main],,AC_MSG_ERROR([opengl is needed]))
    LDFLAGS="$LDFLAGS -lopengl32"
    ;;
  *)
    ;;
esac

AC_CHECK_HEADER([boost/noncopyable.hpp],,AC_MSG_ERROR([D-Net requires Boost.]))

AC_CHECK_LIB([m], [sin],,AC_MSG_ERROR([libm is needed]))
LDFLAGS="$LDFLAGS -lm"

AC_CHECK_HEADER([vorbis/vorbisfile.h],,AC_MSG_ERROR([Can't find a working vorbisfile include anywhere]))
AC_CHECK_LIB([ogg], [ogg_stream_init],,AC_MSG_ERROR([libogg is needed]))
AC_CHECK_LIB([vorbis], [vorbis_info_init],,AC_MSG_ERROR([libvorbis is needed]))
AC_CHECK_LIB([vorbisfile], [ov_open],,AC_MSG_ERROR([libvorbisfile is needed]))
LDFLAGS="$LDFLAGS -lvorbisfile -lvorbis -logg"

CPPFLAGS="$CPPFLAGS `sdl-config --cflags`"
LDFLAGS="$LDFLAGS `sdl-config --libs`"
# check SDL

AC_OUTPUT(Makefile)
